// Recursion //


 // factorial of a number //
 
int fact(int n){
 if (n==0) return 1;
return fact(n-1)*n;
}
int main(){
int n;
cin>>n;
cout<<fact(n);
}

// Digit sum of a number //

int digi(int n){
if(n<0) return 0;
return digi(n/10) + n%10;
}
int main(){
int n;
cin>>n;
cout<< digi(n)<<endl;
}

// Declare a pair //

int main(){
pair<int , string> p;
cin>>p.first>>p.second;
cout<<p.first<<p.second;
}

// vector of pairs //

int main(){
vector<pair<int,int>>v;
int n;
cin>>n;
for(int i=0; i<n; i++){
int x,y;
cin>>x>>y;
v.push_back({x,y});
}
}
// itertator of vector //

vector<int> :: iterator it = v.begin();
for(it = v.begin(); it != v.end(); it++){
cout<<(*it) <<endl;
}

//iterator of a pair //

vector<pair<int , int>> v_p = {{1,2} , {2,3} , {3,4}};
vector<pair<int , int>> :: iterator it;
for(it =v_p.begin(); it!= v_p.end(); it++){
cout<<(*it).first << (*it).second<<endl;
}

// Declare a map //
map<int , string> m;
int n;
cin>>n;
for(int i=0; i<n; i++){
cin>>x>>y;
m.insert({x,y});
}

// frequency of a map //

int main(){
map<string, int  >m;
int n;
cin>>n;
for(int i=0; i<n; i++){
string s;
cin>>s;
m[s]++;
}
for(auto pr: m){
cout<<pr.first<<pr.second<<endl;
}
}

// set declaration //
// Input and Output of a Set //
int main(){
set<string> s;
int x;
cin>>x;
for(it = s.begin(); it!=s.end(); it++){
s.insert(x);
}
for(auto value : s){
cout<<value<<endl;
}
}
// Nesting of a map //

map<pair<string , string> , vector<int>>m;
int n;
cin>>n;
for(int i=0; i<n; i++){
string fn, ln;
int ct;
cin>>fn>>ln>>ct;
for(int j=0; j<n; j++){
int x;
cin>>x;
m[{fn,ln}].push_back(x);
}
}
