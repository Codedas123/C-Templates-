// Adjacency list //

#include<bits/stdc++.h>
using namespace std;

vector<int> graph2[N];

int main(){
int n,m;
cin>>n>>m;
for(int i=0; i<n; i++){
int v1,v2 , wt;
cin>>v1>>v2;



graph2[v1].push_back({v2, wt});
graph2[v2].push_back({v1, wt});
}
}

//  Depth First Search //

vector<int> g[N];
bool vis[N];

bool dfs(int vertex){

 vis[vertex] = true;
for(int child : g[vertex]){
  if(vis[child]) continue;

dfs(child);
   
  }
  return isLoopExists;
}


  int main(){
  int n,m;
  cin>>n>>m;
  for(int i=0; i<m; i++){
  int v1,v2;
  cin>>v1>>v2;
  g[v1].push_back(v2);
  g[v2].push_back(v1);
  }
  }
  
